{"version":3,"sources":["components/RepositoriesComponents/RepositoriesList.module.css","components/RepositoriesComponents/Repositories.module.css","store/constants/actionConstants.ts","store/reducers/repositoryReducers.ts","store/reducers/index.ts","store/store.ts","store/action-creators/repositoryActionCreator.ts","components/RepositoriesComponents/RepositoriesInput.tsx","hooks/useActions.ts","hooks/useSelector.ts","components/RepositoriesComponents/RepositoriesList.tsx","components/RepositoriesComponents/Repositories.tsx","containers/App.tsx","index.tsx"],"names":["module","exports","ActionConstants","initialState","loading","error","data","repositoriesReducer","state","action","type","SEARCH_REPOSITORIES","SEARCH_REPOSITORIES_SUCCESS","payload","SEARCH_REPOSITORIES_ERROR","reducers","combineReducers","repositories","store","createStore","applyMiddleware","thunk","searchRepositories","lib","dispatch","a","axios","get","params","text","packageNames","objects","map","result","package","name","Error","message","RepositoriesInput","useState","setLib","useDispatch","bindActionCreators","repositoryActionCreators","useActions","onSubmit","e","preventDefault","className","classes","field","htmlFor","id","value","onChange","target","useSelector","_useSelector","RepositoriesList","repoList","repository","key","Repositories","Output","App","main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,SAAW,qC,mBCA7BD,EAAOC,QAAU,CAAC,OAAS,+B,wJCDfC,E,+EAAAA,K,0CAAAA,E,0DAAAA,E,uDAAAA,M,KCSZ,IAAMC,EAAe,CACnBC,SAAS,EACTC,MAAO,KACPC,KAAM,IAgCOC,EA7Ba,WAGH,IAFvBC,EAEsB,uDAFKL,EAC3BM,EACsB,uCAEtB,OAAQA,EAAOC,MACb,KAAKR,EAAgBS,oBACnB,MAAO,CACLP,SAAS,EACTC,MAAO,KACPC,KAAM,IAEV,KAAKJ,EAAgBU,4BACnB,MAAO,CACLR,SAAS,EACTC,MAAO,KACPC,KAAMG,EAAOI,SAEjB,KAAKX,EAAgBY,0BACnB,MAAO,CACLV,SAAS,EACTC,MAAOI,EAAOI,QACdP,KAAM,IAEV,QACE,OAAOE,ICjCEO,EAJEC,YAAgB,CAC/BC,aAAcV,ICAHW,EAAQC,YAAYJ,EAAU,GAAIK,YAAgBC,M,0CCClDC,EAAqB,SAACC,GACjC,8CAAO,WAAOC,GAAP,mBAAAC,EAAA,6DACLD,EAAS,CACPd,KAAMR,EAAgBS,sBAFnB,kBAMoBe,IAAMC,IAC3B,yCACA,CACEC,OAAQ,CACNC,KAAMN,KAVT,gBAMKjB,EANL,EAMKA,KASFwB,EAAexB,EAAKyB,QAAQC,KAAI,SAACC,GACrC,OAAOA,EAAOC,QAAQC,QAGxBX,EAAS,CACPd,KAAMR,EAAgBU,4BACtBC,QAASiB,IArBR,kDAwBC,gBAAeM,OACjBZ,EAAS,CACPd,KAAMR,EAAgBY,0BACtBD,QAAS,KAAIwB,UA3Bd,0DAAP,uD,yBC6BaC,EA9BqB,WAAO,IAAD,EAClBC,mBAAS,IADS,mBACjChB,EADiC,KAC5BiB,EAD4B,KAEhClB,ECHgB,WACxB,IAAME,EAAWiB,cAEjB,OAAOC,YAAmBC,EAA0BnB,GDArBoB,GAAvBtB,mBAYR,OACE,uBAAMuB,SAPgB,SAACC,GACvBA,EAAEC,iBAGFzB,EAAmBC,IAGnB,UACE,sBAAKyB,UAAWC,IAAQC,MAAxB,UACE,uBAAOC,QAAQ,SAAf,oDACA,uBACEzC,KAAK,OACL0C,GAAG,SACHC,MAAO9B,EACP+B,SAnBmB,SAACR,GAC1BA,EAAEC,iBACFP,EAAOM,EAAES,OAAOF,aAoBd,gDE3BOG,EAA+CC,I,iBCmB7CC,EAlBoB,WAAO,IAAD,EACNF,GAAY,SAAChD,GAAD,OAAWA,EAAMS,gBAAtDX,EAD+B,EAC/BA,KAAMD,EADyB,EACzBA,MAAOD,EADkB,EAClBA,QAErB,OACE,sBAAK4C,UAAWC,IAAQU,SAAxB,UACGtD,GAAS,6BAAKA,IACdD,GAAW,6CACVC,IAAUD,GACV,6BACGE,EAAK0B,KAAI,SAAC4B,EAAYC,GAAb,OACR,6BAAeD,GAANC,Y,iBCANC,EATgB,WAC7B,OACE,0BAASd,UAAWC,IAAQc,OAA5B,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,iBCMSC,MAXf,WACE,OACE,cAAC,IAAD,CAAU9C,MAAOA,EAAjB,SACE,uBAAM8B,UAAWC,IAAQgB,KAAzB,UACE,2DACA,cAAC,EAAD,UCJRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5c6f44b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"repoList\":\"RepositoriesList_repoList__2hXx2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Output\":\"Repositories_Output__RC5l6\"};","export enum ActionConstants {\n  SEARCH_REPOSITORIES = \"search_repositories\",\n  SEARCH_REPOSITORIES_SUCCESS = \"search_repositories_success\",\n  SEARCH_REPOSITORIES_ERROR = \"search_repositories_error\",\n}\n","import { ActionConstants } from \"../constants/actionConstants\";\nimport { RepositoryActions } from \"../action-types/repositoryActionTypes\";\n\ninterface RepositoriesState {\n  loading: boolean;\n  error: string | null;\n  data: Array<string>;\n}\n\nconst initialState = {\n  loading: false,\n  error: null,\n  data: [],\n};\n\nconst repositoriesReducer = (\n  state: RepositoriesState = initialState,\n  action: RepositoryActions\n): RepositoriesState => {\n  // Type Guards also work for switch cases\n  switch (action.type) {\n    case ActionConstants.SEARCH_REPOSITORIES:\n      return {\n        loading: true,\n        error: null,\n        data: [],\n      };\n    case ActionConstants.SEARCH_REPOSITORIES_SUCCESS:\n      return {\n        loading: false,\n        error: null,\n        data: action.payload,\n      };\n    case ActionConstants.SEARCH_REPOSITORIES_ERROR:\n      return {\n        loading: false,\n        error: action.payload,\n        data: [],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default repositoriesReducer;\n","import { combineReducers } from \"redux\";\nimport repositoriesReducer from \"./repositoryReducers\";\n\nconst reducers = combineReducers({\n  repositories: repositoriesReducer,\n});\n\nexport default reducers;\n\nexport type RootState = ReturnType<typeof reducers>;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionConstants } from \"../constants/actionConstants\";\nimport { RepositoryActions } from \"../action-types/repositoryActionTypes\";\n\nexport const searchRepositories = (lib: string) => {\n  return async (dispatch: Dispatch<RepositoryActions>) => {\n    dispatch({\n      type: ActionConstants.SEARCH_REPOSITORIES,\n    });\n\n    try {\n      const { data } = await axios.get(\n        \"https://registry.npmjs.org/-/v1/search\",\n        {\n          params: {\n            text: lib,\n          },\n        }\n      );\n\n      const packageNames = data.objects.map((result: any) => {\n        return result.package.name;\n      });\n\n      dispatch({\n        type: ActionConstants.SEARCH_REPOSITORIES_SUCCESS,\n        payload: packageNames,\n      });\n    } catch (err) {\n      if (err instanceof Error) {\n        dispatch({\n          type: ActionConstants.SEARCH_REPOSITORIES_ERROR,\n          payload: err.message,\n        });\n      }\n    }\n  };\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useActions } from \"../../hooks/useActions\";\nimport classes from \"./RepositoriesInput.module.css\";\n\nconst RepositoriesInput: React.FC = () => {\n  const [lib, setLib] = useState(\"\");\n  const { searchRepositories } = useActions();\n  const inputChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    setLib(e.target.value);\n  };\n\n  const onSubmitHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    // Dispatch\n    searchRepositories(lib);\n  };\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className={classes.field}>\n        <label htmlFor=\"search\">Which npm package are you looking for?</label>\n        <input\n          type=\"text\"\n          id=\"search\"\n          value={lib}\n          onChange={inputChangeHandler}\n        />\n      </div>\n      <button>Search</button>\n    </form>\n  );\n};\n\nexport default RepositoriesInput;\n","import { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { repositoryActionCreators } from \"../store\";\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n\n  return bindActionCreators(repositoryActionCreators, dispatch);\n};\n","import { useSelector as _useSelector, TypedUseSelectorHook } from \"react-redux\";\nimport { RootState } from \"../store\";\n\nexport const useSelector: TypedUseSelectorHook<RootState> = _useSelector;\n","import React from \"react\";\nimport { useSelector } from \"../../hooks/useSelector\";\nimport classes from \"./RepositoriesList.module.css\";\n\nconst RepositoriesList: React.FC = () => {\n  const { data, error, loading } = useSelector((state) => state.repositories);\n\n  return (\n    <div className={classes.repoList}>\n      {error && <h3>{error}</h3>}\n      {loading && <h3>Loading...</h3>}\n      {!error && !loading && (\n        <ul>\n          {data.map((repository, key) => (\n            <li key={key}>{repository}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default RepositoriesList;\n","import React from \"react\";\nimport RepositoriesInput from \"./RepositoriesInput\";\nimport RepositoriesList from \"./RepositoriesList\";\nimport classes from \"./Repositories.module.css\";\n\nconst Repositories: React.FC = () => {\n  return (\n    <section className={classes.Output}>\n      <RepositoriesInput />\n      <RepositoriesList />\n    </section>\n  );\n};\n\nexport default Repositories;\n","import { Provider } from \"react-redux\";\nimport { store } from \"../store\";\nimport Repositories from \"../components/RepositoriesComponents/Repositories\";\nimport classes from \"./App.module.css\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <main className={classes.main}>\n        <h1>Search for an npm package</h1>\n        <Repositories />\n      </main>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}